services:
  catalog.api:
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORT: 8080
      ConnectionStrings__Database: Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
    ports:
      - "6000:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  
  basket.api:
    container_name: basket.api
    depends_on:
      - basketdb
      - distributedcache
      - discount.grpc
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORT: 8080
      ConnectionStrings__Database: Server=basketdb;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      ConnectionStrings__Redis: "distributedcache:6379"
      GrpcSettings__DiscountUrl: "http://discount.grpc:8080"
    ports:
      - "6001:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        
  discount.grpc:
    container_name: discount.grpc
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORT: 8080
      ConnectionStrings__Database: Data Source=discountdb
    ports:
     - "6002:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
        
    
      
          
  catalogdb:
    container_name: catalogdb
    restart: always
    environment:
      POSTGRES_DB: CatalogDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  basketdb:
    container_name: basketdb
    restart: always
    environment:
      POSTGRES_DB: BasketDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  distributedcache:
    container_name: distributedcache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    
  orderdb:
    container_name: orderdb
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Huy123456@
    ports:
      - "1433:1433"
  
  messagebroker:
    container_name: messagebroker
    hostname: ecommerce-mq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always